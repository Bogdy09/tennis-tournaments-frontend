{"ast":null,"code":"import _objectSpread from\"C:/Users/lazab/tennis-tournaments11/tennis-tournaments/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect,useContext}from\"react\";import{useParams,useNavigate,useLocation}from\"react-router-dom\";import axios from\"axios\";// Add this import\n//import { TournamentContext } from \"../context/TournamentContext.js\";\nimport{updateTournament}from\"../api.js\";// Define API_URL (best practice: use environment variable)\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const API_URL=process.env.REACT_APP_API_URL||\"http://localhost:5000/api/tournaments\";export default function EditTournament(_ref){var _location$state2;let{isOnline,serverAvailable}=_ref;const{id}=useParams();const navigate=useNavigate();const location=useLocation();//const { tournaments, updateTournament } = useContext(TournamentContext);\nconst[loading,setLoading]=useState(true);// Add loading state\nconst[error,setError]=useState(null);// Initialize form with either location state or empty values\nconst[formData,setFormData]=useState({name:\"\",location:\"\",date:\"\",prize:\"\",favoritePlayerId:\"\"});useEffect(()=>{const loadTournament=async()=>{setLoading(true);try{var _location$state;// Try location state first\nif((_location$state=location.state)!==null&&_location$state!==void 0&&_location$state.tournament){setFormData(location.state.tournament);return;}// Fallback to context\nconst response=await axios.get(\"\".concat(API_URL,\"/\").concat(id));setFormData(response.data);}catch(error){console.error(\"Failed to load tournament:\",error);setError(error.message);}finally{setLoading(false);}};loadTournament();},[id,location.state]);if(loading)return/*#__PURE__*/_jsx(\"div\",{children:\"Loading tournament data...\"});if(error)return/*#__PURE__*/_jsxs(\"div\",{children:[\"Error loading tournament: \",error]});if(!formData.id)return/*#__PURE__*/_jsx(\"div\",{children:\"Tournament not found\"});const handleChange=e=>{setFormData(_objectSpread(_objectSpread({},formData),{},{[e.target.name]:e.target.value}));};const handleSubmit=async e=>{e.preventDefault();await updateTournament(Number(id),formData,isOnline,serverAvailable);navigate(\"/\");};// Show loading only if we have no data at all\nif(!formData.name&&!((_location$state2=location.state)!==null&&_location$state2!==void 0&&_location$state2.tournament)){return/*#__PURE__*/_jsx(\"div\",{children:\"Loading tournament data...\"});}return/*#__PURE__*/_jsxs(\"div\",{style:{maxWidth:\"600px\",margin:\"0 auto\",padding:\"20px\"},children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Edit Tournament\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Name\",name:\"name\",value:formData.name,onChange:handleChange//required\n}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Location\",name:\"location\",value:formData.location,onChange:handleChange//required\n}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",name:\"date\",value:formData.date,onChange:handleChange//required\n}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Prize\",name:\"prize\",value:formData.prize,onChange:handleChange//required\n}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Favorite Player\",name:\"favoritePlayerId\",value:formData.favoritePlayer,onChange:handleChange}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Save Changes\"})]})]});}","map":{"version":3,"names":["React","useState","useEffect","useContext","useParams","useNavigate","useLocation","axios","updateTournament","jsx","_jsx","jsxs","_jsxs","API_URL","process","env","REACT_APP_API_URL","EditTournament","_ref","_location$state2","isOnline","serverAvailable","id","navigate","location","loading","setLoading","error","setError","formData","setFormData","name","date","prize","favoritePlayerId","loadTournament","_location$state","state","tournament","response","get","concat","data","console","message","children","handleChange","e","_objectSpread","target","value","handleSubmit","preventDefault","Number","style","maxWidth","margin","padding","onSubmit","type","placeholder","onChange","favoritePlayer"],"sources":["C:/Users/lazab/tennis-tournaments11/tennis-tournaments/client/src/pages/EditTournament.js"],"sourcesContent":["\r\nimport React, { useState, useEffect, useContext } from \"react\";\r\nimport { useParams, useNavigate, useLocation } from \"react-router-dom\";\r\nimport axios from \"axios\"; // Add this import\r\n//import { TournamentContext } from \"../context/TournamentContext.js\";\r\nimport { updateTournament } from \"../api.js\"; \r\n\r\n\r\n// Define API_URL (best practice: use environment variable)\r\nconst API_URL = process.env.REACT_APP_API_URL || \"http://localhost:5000/api/tournaments\";\r\n\r\nexport default function EditTournament({ isOnline, serverAvailable }) {\r\n    const { id } = useParams();\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    //const { tournaments, updateTournament } = useContext(TournamentContext);\r\n    const [loading, setLoading] = useState(true); // Add loading state\r\n    const [error, setError] = useState(null);\r\n\r\n    // Initialize form with either location state or empty values\r\n    const [formData, setFormData] = useState({\r\n        name: \"\",\r\n        location: \"\",\r\n        date: \"\",\r\n        prize: \"\",\r\n        favoritePlayerId: \"\"\r\n    });\r\n\r\n    useEffect(() => {\r\n        const loadTournament = async () => {\r\n            setLoading(true);\r\n            try {\r\n                // Try location state first\r\n                if (location.state?.tournament) {\r\n                    setFormData(location.state.tournament);\r\n                    return;\r\n                }\r\n\r\n                // Fallback to context\r\n                const response = await axios.get(`${API_URL}/${id}`);\r\n                setFormData(response.data);\r\n            } catch (error) {\r\n                console.error(\"Failed to load tournament:\", error);\r\n                setError(error.message);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        loadTournament();\r\n    }, [id, location.state]);\r\n\r\n    if (loading) return <div>Loading tournament data...</div>;\r\n    if (error) return <div>Error loading tournament: {error}</div>;\r\n    if (!formData.id) return <div>Tournament not found</div>;\r\n\r\n    const handleChange = (e) => {\r\n        setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        await updateTournament(Number(id), formData, isOnline, serverAvailable);\r\n        navigate(\"/\");\r\n    };\r\n\r\n    // Show loading only if we have no data at all\r\n    if (!formData.name && !location.state?.tournament) {\r\n        return <div>Loading tournament data...</div>;\r\n    }\r\n\r\n    return (\r\n        <div style={{ maxWidth: \"600px\", margin: \"0 auto\", padding: \"20px\" }}>\r\n            <h2>Edit Tournament</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                \r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Name\"\r\n                    name=\"name\"\r\n                    value={formData.name}\r\n                    onChange={handleChange}\r\n                    //required\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Location\"\r\n                    name=\"location\"\r\n                    value={formData.location}\r\n                    onChange={handleChange}\r\n                    //required\r\n                />\r\n                <input\r\n                    type=\"date\"\r\n                    name=\"date\"\r\n                    value={formData.date}\r\n                    onChange={handleChange}\r\n                    //required\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Prize\"\r\n                    name=\"prize\"\r\n                    value={formData.prize}\r\n                    onChange={handleChange}\r\n                    //required\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Favorite Player\"\r\n                    name=\"favoritePlayerId\"\r\n                    value={formData.favoritePlayer}\r\n                    onChange={handleChange}\r\n                />\r\n\r\n                \r\n                <button type=\"submit\">Save Changes</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}