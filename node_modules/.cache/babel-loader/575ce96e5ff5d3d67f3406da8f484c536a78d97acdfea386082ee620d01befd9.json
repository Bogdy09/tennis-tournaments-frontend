{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lazab\\\\tennis-tournaments11\\\\tennis-tournaments\\\\client\\\\src\\\\context\\\\TournamentContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { io } from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TournamentContext = /*#__PURE__*/createContext();\nexport const TournamentProvider = ({\n  children\n}) => {\n  _s();\n  const [tournaments, setTournaments] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [latestTournament, setLatestTournament] = useState(null);\n  const API_URL = \"http://localhost:5000/api/tournaments\";\n  useEffect(() => {\n    const fetchTournaments = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n        const response = await axios.get(API_URL);\n        const responseData = response.data;\n        let tournamentsArray = [];\n        if (Array.isArray(responseData)) {\n          tournamentsArray = responseData;\n        } else if (Array.isArray(responseData === null || responseData === void 0 ? void 0 : responseData.tournaments)) {\n          tournamentsArray = responseData.tournaments;\n        }\n        setTournaments(tournamentsArray);\n      } catch (err) {\n        setError(err.message || 'Failed to load tournaments');\n        setTournaments([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchTournaments();\n\n    //  WebSocket setup\n    const socket = io(\"http://localhost:5000\");\n    socket.on(\"connect\", () => {\n      console.log(\" Connected to WebSocket server\");\n    });\n    socket.on(\"new-tournament\", newTournament => {\n      setTournaments(prev => [...prev, newTournament]);\n      setLatestTournament(newTournament); //  track this\n    });\n    socket.on(\"disconnect\", () => {\n      console.log(\" Disconnected from WebSocket server\");\n    });\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n  const addTournament = async newTournament => {\n    try {\n      const response = await axios.post(API_URL, newTournament);\n      setTournaments(prev => [...prev, response.data]);\n      return response.data;\n    } catch (err) {\n      throw new Error(\"API Error: \" + err.message);\n    }\n  };\n  const deleteTournament = async id => {\n    try {\n      await axios.delete(`${API_URL}/${id}`);\n      setTournaments(prev => prev.filter(t => t.id !== id));\n    } catch (err) {\n      throw new Error(\"API Error: \" + err.message);\n    }\n  };\n  const updateTournament = async (id, updatedFields) => {\n    try {\n      const response = await axios.patch(`${API_URL}/${id}`, updatedFields);\n      setTournaments(prev => prev.map(t => t.id === id ? response.data : t));\n      return response.data;\n    } catch (err) {\n      throw new Error(\"API Error: \" + err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(TournamentContext.Provider, {\n    value: {\n      tournaments,\n      loading,\n      error,\n      addTournament,\n      deleteTournament,\n      updateTournament,\n      latestTournament\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this);\n};\n_s(TournamentProvider, \"YWvvtfpPYnGFdMTsES49eX7lxhg=\");\n_c = TournamentProvider;\nvar _c;\n$RefreshReg$(_c, \"TournamentProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","axios","io","jsxDEV","_jsxDEV","TournamentContext","TournamentProvider","children","_s","tournaments","setTournaments","loading","setLoading","error","setError","latestTournament","setLatestTournament","API_URL","fetchTournaments","response","get","responseData","data","tournamentsArray","Array","isArray","err","message","socket","on","console","log","newTournament","prev","disconnect","addTournament","post","Error","deleteTournament","id","delete","filter","t","updateTournament","updatedFields","patch","map","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/lazab/tennis-tournaments11/tennis-tournaments/client/src/context/TournamentContext.js"],"sourcesContent":["import { createContext, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { io } from \"socket.io-client\";\r\n\r\nexport const TournamentContext = createContext();\r\n\r\nexport const TournamentProvider = ({ children }) => {\r\n    const [tournaments, setTournaments] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [latestTournament, setLatestTournament] = useState(null);\r\n\r\n\r\n    const API_URL = \"http://localhost:5000/api/tournaments\";\r\n\r\n    useEffect(() => {\r\n        const fetchTournaments = async () => {\r\n            try {\r\n                setLoading(true);\r\n                setError(null);\r\n\r\n                const response = await axios.get(API_URL);\r\n                const responseData = response.data;\r\n\r\n                let tournamentsArray = [];\r\n\r\n                if (Array.isArray(responseData)) {\r\n                    tournamentsArray = responseData;\r\n                } else if (Array.isArray(responseData?.tournaments)) {\r\n                    tournamentsArray = responseData.tournaments;\r\n                }\r\n\r\n                setTournaments(tournamentsArray);\r\n\r\n            } catch (err) {\r\n                setError(err.message || 'Failed to load tournaments');\r\n                setTournaments([]);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchTournaments();\r\n\r\n        //  WebSocket setup\r\n        const socket = io(\"http://localhost:5000\");\r\n\r\n        socket.on(\"connect\", () => {\r\n            console.log(\" Connected to WebSocket server\");\r\n        });\r\n\r\n        socket.on(\"new-tournament\", (newTournament) => {\r\n            setTournaments(prev => [...prev, newTournament]);\r\n            setLatestTournament(newTournament); //  track this\r\n        });\r\n\r\n\r\n        socket.on(\"disconnect\", () => {\r\n            console.log(\" Disconnected from WebSocket server\");\r\n        });\r\n\r\n        return () => {\r\n            socket.disconnect();\r\n        };\r\n    }, []);\r\n\r\n    const addTournament = async (newTournament) => {\r\n        try {\r\n            const response = await axios.post(API_URL, newTournament);\r\n            setTournaments(prev => [...prev, response.data]);\r\n            return response.data;\r\n        } catch (err) {\r\n            throw new Error(\"API Error: \" + err.message);\r\n        }\r\n    };\r\n\r\n    const deleteTournament = async (id) => {\r\n        try {\r\n            await axios.delete(`${API_URL}/${id}`);\r\n            setTournaments(prev => prev.filter(t => t.id !== id));\r\n        } catch (err) {\r\n            throw new Error(\"API Error: \" + err.message);\r\n        }\r\n    };\r\n\r\n    const updateTournament = async (id, updatedFields) => {\r\n        try {\r\n            const response = await axios.patch(`${API_URL}/${id}`, updatedFields);\r\n            setTournaments(prev =>\r\n                prev.map(t => (t.id === id ? response.data : t))\r\n            );\r\n            return response.data;\r\n        } catch (err) {\r\n            throw new Error(\"API Error: \" + err.message);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <TournamentContext.Provider value={{\r\n            tournaments,\r\n            loading,\r\n            error,\r\n            addTournament,\r\n            deleteTournament,\r\n            updateTournament,\r\n            latestTournament\r\n        }}>\r\n            {children}\r\n        </TournamentContext.Provider>\r\n    );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}