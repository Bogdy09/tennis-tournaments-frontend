{"ast":null,"code":"import React from\"react\";import{BrowserRouter as Router,Route,Routes}from\"react-router-dom\";import Navbar from\"./components/Navbar.js\";import Home from\"./pages/Home.js\";import AddTournament from\"./pages/AddTournament.js\";import ViewTournament from\"./pages/ViewTournament.js\";import EditTournament from\"./pages/EditTournament.js\";import\"./App.css\";import TournamentCharts from\"./pages/TournamentsCharts.js\";import ReactDOM from\"react-dom\";import ViewPlayers from'./pages/ViewPlayers.js';import LoginForm from'./pages/LoginForm.jsx';import Register from'./pages/Register.jsx';import MonitoredUsers from'./pages/MonitoredUsers.js';import{useEffect,useState}from\"react\";import{syncQueue}from\"./utils/offlineQueue.js\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function App(){const[isOnline,setIsOnline]=useState(navigator.onLine);const[serverAvailable,setServerAvailable]=useState(true);useEffect(()=>{const updateOnlineStatus=()=>setIsOnline(navigator.onLine);window.addEventListener('online',updateOnlineStatus);window.addEventListener('offline',updateOnlineStatus);return()=>{window.removeEventListener('online',updateOnlineStatus);window.removeEventListener('offline',updateOnlineStatus);};},[]);useEffect(()=>{const pingServer=async()=>{try{const res=await fetch(\"/api/tournaments\");setServerAvailable(res.ok);}catch(err){setServerAvailable(false);}};pingServer();const interval=setInterval(pingServer,10000);// check every 10s\nreturn()=>clearInterval(interval);},[]);useEffect(()=>{if(isOnline&&serverAvailable){syncQueue(isOnline,serverAvailable);}},[isOnline,serverAvailable]);return/*#__PURE__*/_jsxs(Router,{children:[/*#__PURE__*/_jsx(Navbar,{isOnline:isOnline,serverAvailable:serverAvailable}),/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(Home,{})}),/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(Home,{isOnline:isOnline,serverAvailable:serverAvailable})}),/*#__PURE__*/_jsx(Route,{path:\"/add-tournament\",element:/*#__PURE__*/_jsx(AddTournament,{isOnline:isOnline,serverAvailable:serverAvailable})}),/*#__PURE__*/_jsx(Route,{path:\"/edit-tournament/:id\",element:/*#__PURE__*/_jsx(EditTournament,{isOnline:isOnline,serverAvailable:serverAvailable})}),/*#__PURE__*/_jsx(Route,{path:\"/view-tournament/:id\",element:/*#__PURE__*/_jsx(ViewTournament,{isOnline:isOnline,serverAvailable:serverAvailable})}),/*#__PURE__*/_jsx(Route,{path:\"/players\",element:/*#__PURE__*/_jsx(ViewPlayers,{isOnline:isOnline,serverAvailable:serverAvailable})}),/*#__PURE__*/_jsx(Route,{path:\"/charts\",element:/*#__PURE__*/_jsx(TournamentCharts,{})}),/*#__PURE__*/_jsx(Route,{path:\"/players\",element:/*#__PURE__*/_jsx(ViewPlayers,{isOnline:isOnline,serverAvailable:serverAvailable})}),/*#__PURE__*/_jsx(Route,{path:\"/auth/login\",element:/*#__PURE__*/_jsx(LoginForm,{isOnline:isOnline,serverAvailable:serverAvailable})}),/*#__PURE__*/_jsx(Route,{path:\"/auth/register\",element:/*#__PURE__*/_jsx(Register,{isOnline:isOnline,serverAvailable:serverAvailable})}),/*#__PURE__*/_jsx(Route,{path:\"/monitored-users\",element:/*#__PURE__*/_jsx(MonitoredUsers,{isOnline:isOnline,serverAvailable:serverAvailable})})]})]});}","map":{"version":3,"names":["React","BrowserRouter","Router","Route","Routes","Navbar","Home","AddTournament","ViewTournament","EditTournament","TournamentCharts","ReactDOM","ViewPlayers","LoginForm","Register","MonitoredUsers","useEffect","useState","syncQueue","jsx","_jsx","jsxs","_jsxs","App","isOnline","setIsOnline","navigator","onLine","serverAvailable","setServerAvailable","updateOnlineStatus","window","addEventListener","removeEventListener","pingServer","res","fetch","ok","err","interval","setInterval","clearInterval","children","path","element"],"sources":["C:/Users/lazab/tennis-tournaments11/tennis-tournaments/client/src/App.js"],"sourcesContent":["import React from \"react\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport Navbar from \"./components/Navbar.js\";\nimport Home from \"./pages/Home.js\";\nimport AddTournament from \"./pages/AddTournament.js\";\nimport ViewTournament from \"./pages/ViewTournament.js\";\nimport EditTournament from \"./pages/EditTournament.js\";\nimport \"./App.css\";\nimport TournamentCharts from \"./pages/TournamentsCharts.js\";\nimport ReactDOM from \"react-dom\";\nimport ViewPlayers from './pages/ViewPlayers.js';\nimport LoginForm from './pages/LoginForm.jsx';\nimport Register from './pages/Register.jsx';\nimport MonitoredUsers from './pages/MonitoredUsers.js';\n\nimport { useEffect, useState } from \"react\";\nimport { syncQueue } from \"./utils/offlineQueue.js\";\n\nexport default function App() {\n    const [isOnline, setIsOnline] = useState(navigator.onLine);\n    const [serverAvailable, setServerAvailable] = useState(true);\n\n    useEffect(() => {\n        const updateOnlineStatus = () => setIsOnline(navigator.onLine);\n        window.addEventListener('online', updateOnlineStatus);\n        window.addEventListener('offline', updateOnlineStatus);\n\n        return () => {\n            window.removeEventListener('online', updateOnlineStatus);\n            window.removeEventListener('offline', updateOnlineStatus);\n        };\n    }, []);\n\n    useEffect(() => {\n        const pingServer = async () => {\n            try {\n                const res = await fetch(\"/api/tournaments\");\n                setServerAvailable(res.ok);\n            } catch (err) {\n                setServerAvailable(false);\n            }\n        };\n        pingServer();\n        const interval = setInterval(pingServer, 10000); // check every 10s\n\n        return () => clearInterval(interval);\n    }, []);\n\n    useEffect(() => {\n        if (isOnline && serverAvailable) {\n            syncQueue(isOnline, serverAvailable);\n        }\n    }, [isOnline, serverAvailable]);\n    return (\n        <Router>\n            <Navbar isOnline={isOnline} serverAvailable={serverAvailable} />\n            <Routes>\n                <Route path=\"/\" element={<Home />} />\n               \n                    <Route path=\"/\" element={<Home isOnline={isOnline} serverAvailable={serverAvailable} />} />\n           \n                    <Route path=\"/add-tournament\" element={<AddTournament isOnline={isOnline} serverAvailable={serverAvailable} />} />\n                <Route path=\"/edit-tournament/:id\" element={<EditTournament isOnline={isOnline} serverAvailable={serverAvailable} />} />\n                <Route path=\"/view-tournament/:id\" element={<ViewTournament isOnline={isOnline} serverAvailable={serverAvailable} />} />\n                <Route path=\"/players\" element={<ViewPlayers isOnline={isOnline} serverAvailable={serverAvailable} />} />\n\n                <Route path=\"/charts\" element={<TournamentCharts />} />\n                <Route path=\"/players\" element={<ViewPlayers isOnline={isOnline} serverAvailable={serverAvailable} />} />\n                <Route path=\"/auth/login\" element={<LoginForm isOnline={isOnline} serverAvailable={serverAvailable} />} />\n                <Route path=\"/auth/register\" element={<Register isOnline={isOnline} serverAvailable={serverAvailable} />} />\n                <Route path=\"/monitored-users\" element={<MonitoredUsers isOnline={isOnline} serverAvailable={serverAvailable} />} />\n          \n\n               \n\n\n            </Routes>\n        </Router>\n    );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}