{"ast":null,"code":"import _objectSpread from\"C:/Users/lazab/tennis-tournaments11/tennis-tournaments/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import axios from\"axios\";import{queueOperation}from'./utils/offlineQueue.js';const API_URL='hhttps://tennis-backend-ioen.onrender.com';export const getTournaments=async()=>{const response=await fetch(\"https://tennis-backend-ioen.onrender.com/api/tournaments\");if(!response.ok)throw new Error(\"Failed to fetch tournaments\");return await response.json();// should be { tournaments: [...] } or just [...]\n};// In api.js\nexport async function getPlayers(){let filters=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};const params=new URLSearchParams(filters).toString();const res=await fetch(\"/api/players?\".concat(params));if(!res.ok)throw new Error('Failed to load players');return res.json();}export async function addPlayer(player){const res=await fetch('/api/players',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(player)});if(!res.ok)throw new Error('Failed to add player');}export async function updatePlayer(id,player){const res=await fetch(\"/api/players/\".concat(id),{method:'PUT',headers:{'Content-Type':'application/json'},body:JSON.stringify(player)});if(!res.ok)throw new Error('Failed to update player');}export async function deletePlayer(id){const res=await fetch(\"/api/players/\".concat(id),{method:'DELETE'});if(!res.ok)throw new Error('Failed to delete player');}export const getTournamentById=async(id,isOnline,serverAvailable)=>{if(!isOnline||!serverAvailable){const local=localStorage.getItem('offline_local_tournaments');const list=local?JSON.parse(local):[];return list.find(t=>t.id===Number(id))||null;}const response=await axios.get(\"\".concat(API_URL,\"/\").concat(id));return response.data;};export const createTournament=async(tournament,isOnline,serverAvailable)=>{const userId=localStorage.getItem('userId');console.log('isOnline:',isOnline,'serverAvailable:',serverAvailable);if(!isOnline||!serverAvailable){queueOperation({type:'POST',data:_objectSpread(_objectSpread({},tournament),{},{userId})});const local=JSON.parse(localStorage.getItem('offline_local_tournaments')||'[]');local.push(_objectSpread(_objectSpread({},tournament),{},{id:Date.now()}));localStorage.setItem('offline_local_tournaments',JSON.stringify(local));return{queued:true};}console.log('Sending tournament with userId:',localStorage.getItem('userId'));const res=await fetch('https://tennis-backend-ioen.onrender.com/api/tournaments',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(_objectSpread(_objectSpread({},tournament),{},{userId}))});if(!res.ok)throw new Error('Network error');return await res.json();};export const deleteTournament=async(id,isOnline,serverAvailable)=>{const userId=localStorage.getItem('userId');if(!isOnline||!serverAvailable){queueOperation({type:'DELETE',id});return{queued:true};}try{await axios.delete(\"\".concat(API_URL,\"/\").concat(id),{data:{userId}});return{success:true};}catch(error){console.error('Failed to delete tournament:',error);throw error;// Or return { success: false, error }\n}};export const updateTournament=async(id,updates,isOnline,serverAvailable)=>{console.log(\"hi\");const userId=localStorage.getItem('userId');if(!isOnline||!serverAvailable){queueOperation({type:'PATCH',id,data:updates,userId});return{queued:true};}console.log('Updating tournament with userId:',localStorage.getItem('userId'));try{const response=await axios.patch(\"\".concat(API_URL,\"/\").concat(id),_objectSpread(_objectSpread({},updates),{},{userId}),{headers:{'Content-Type':'application/json'}});return response.data;}catch(error){console.error('Failed to update tournament:',error);throw error;}};","map":{"version":3,"names":["axios","queueOperation","API_URL","getTournaments","response","fetch","ok","Error","json","getPlayers","filters","arguments","length","undefined","params","URLSearchParams","toString","res","concat","addPlayer","player","method","headers","body","JSON","stringify","updatePlayer","id","deletePlayer","getTournamentById","isOnline","serverAvailable","local","localStorage","getItem","list","parse","find","t","Number","get","data","createTournament","tournament","userId","console","log","type","_objectSpread","push","Date","now","setItem","queued","deleteTournament","delete","success","error","updateTournament","updates","patch"],"sources":["C:/Users/lazab/tennis-tournaments11/tennis-tournaments/client/src/api.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { queueOperation } from './utils/offlineQueue.js';\r\nconst API_URL = 'hhttps://tennis-backend-ioen.onrender.com';\r\n\r\n\r\n\r\nexport const getTournaments = async () => {\r\n    const response = await fetch(\"https://tennis-backend-ioen.onrender.com/api/tournaments\");\r\n    if (!response.ok) throw new Error(\"Failed to fetch tournaments\");\r\n    return await response.json(); // should be { tournaments: [...] } or just [...]\r\n};\r\n\r\n// In api.js\r\nexport async function getPlayers(filters = {}) {\r\n    const params = new URLSearchParams(filters).toString();\r\n    const res = await fetch(`/api/players?${params}`);\r\n    if (!res.ok) throw new Error('Failed to load players');\r\n    return res.json();\r\n}\r\n\r\n\r\nexport async function addPlayer(player) {\r\n    const res = await fetch('/api/players', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(player)\r\n    });\r\n    if (!res.ok) throw new Error('Failed to add player');\r\n}\r\n\r\nexport async function updatePlayer(id, player) {\r\n    const res = await fetch(`/api/players/${id}`, { \r\n        method: 'PUT',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(player)\r\n    });\r\n    if (!res.ok) throw new Error('Failed to update player');\r\n}\r\n\r\nexport async function deletePlayer(id) {\r\n    const res = await fetch(`/api/players/${id}`, {\r\n        method: 'DELETE'\r\n    });\r\n    if (!res.ok) throw new Error('Failed to delete player');\r\n}\r\n\r\n\r\nexport const getTournamentById = async (id, isOnline, serverAvailable) => {\r\n    if (!isOnline || !serverAvailable) {\r\n        const local = localStorage.getItem('offline_local_tournaments');\r\n        const list = local ? JSON.parse(local) : [];\r\n        return list.find(t => t.id === Number(id)) || null;\r\n    }\r\n\r\n    const response = await axios.get(`${API_URL}/${id}`);\r\n    return response.data;\r\n};\r\nexport const createTournament = async (tournament, isOnline, serverAvailable) => {\r\n    const userId = localStorage.getItem('userId'); \r\n    console.log('isOnline:', isOnline, 'serverAvailable:', serverAvailable);\r\n    if (!isOnline || !serverAvailable) {\r\n        queueOperation({ type: 'POST', data: { ...tournament, userId } });\r\n\r\n        const local = JSON.parse(localStorage.getItem('offline_local_tournaments') || '[]');\r\n        local.push({ ...tournament, id: Date.now() });\r\n        localStorage.setItem('offline_local_tournaments', JSON.stringify(local));\r\n\r\n        return { queued: true };\r\n    }\r\n    console.log('Sending tournament with userId:', localStorage.getItem('userId'));\r\n\r\n\r\n    const res = await fetch('https://tennis-backend-ioen.onrender.com/api/tournaments', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ ...tournament, userId }), \r\n    });\r\n\r\n    if (!res.ok) throw new Error('Network error');\r\n    return await res.json();\r\n};\r\n\r\nexport const deleteTournament = async (id, isOnline, serverAvailable) => {\r\n    const userId = localStorage.getItem('userId'); \r\n    if (!isOnline || !serverAvailable) {\r\n        queueOperation({ type: 'DELETE', id });\r\n        return { queued: true };\r\n    }\r\n\r\n    try {\r\n        await axios.delete(`${API_URL}/${id}`, {\r\n            data: { userId }\r\n        });\r\n\r\n        return { success: true };\r\n    } catch (error) {\r\n        console.error('Failed to delete tournament:', error);\r\n        throw error; // Or return { success: false, error }\r\n    }\r\n};\r\nexport const updateTournament = async (id, updates, isOnline, serverAvailable) => {\r\n    console.log(\"hi\");\r\n    const userId = localStorage.getItem('userId'); \r\n    if (!isOnline || !serverAvailable) {\r\n        queueOperation({ type: 'PATCH', id, data: updates, userId });\r\n        return { queued: true };\r\n    }\r\n    console.log('Updating tournament with userId:', localStorage.getItem('userId'));\r\n    try {\r\n        const response = await axios.patch(`${API_URL}/${id}`, { ...updates, userId }, {\r\n\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        });\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Failed to update tournament:', error);\r\n        throw error;\r\n    }\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}